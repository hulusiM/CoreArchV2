

<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />
<script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>


<style>
    #map2 {
        height: 60vh;
    }

    path.leaflet-interactive.animate {
        stroke-dasharray: 1920;
        stroke-dashoffset: 1920;
        animation: dash 20s linear 5s forwards;
    }

    @@keyframes dash {
        to {
            stroke-dashoffset: 0;
        }
    }

    .leaflet-marker-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        line-height: 1;
        color: #fff;
        font-size: 11px;
        box-shadow: 0px 0px 10px #ff0000;
        border-radius: 100%;
        border: 2px solid #fff;
        background: #ff3939;
    }

        .active-sidebar .leaflet-marker-icon,
        .leaflet-marker-icon:hover {
            animation: border-pulse 1.5s infinite;
        }

    .leaflet-marker-icon-start {
        display: flex;
        justify-content: center;
        align-items: center;
        line-height: 1;
        color: #fff;
        font-size: 11px;
        box-shadow: 0px 0px 10px #181a18;
        border-radius: 100%;
        border: 2px solid #fff;
        background: #181a18;
        z-index: 9999999999 !important;
    }

        .active-sidebar .leaflet-marker-icon-start,
        .leaflet-marker-icon-start:hover {
            animation: border-pulse 1.5s infinite;
        }

    .leaflet-marker-icon-end {
        display: flex;
        justify-content: center;
        align-items: center;
        line-height: 1;
        color: #fff;
        font-size: 11px;
        box-shadow: 0px 0px 10px #4e39ff;
        border-radius: 100%;
        border: 2px solid #fff;
        background: #4e39ff;
        z-index: 9999999999 !important;
    }

        .active-sidebar .leaflet-marker-icon-end,
        .leaflet-marker-icon-end:hover {
            animation: border-pulse 1.5s infinite;
        }

</style>

<div id="map2"></div>

<script>
    //Görev harita ekranı
    $('#TripHistoryMap_toggle').click(function () {
        var tripId = $('#tripId').val();
        if (tripId > 0) {
            loadMap2(tripId);
            //var model = { tripId: tripId };
            //sendAjxForm(model, "/Trip/GetByTripIdHistoryMap", function (e) {
            //    if (e == 1)
            //        ShowMessage("info", "Bilgi", "Bu plakaya ait <b>arvento numarası</b> bulanamadı, araç ekranında ekleyip tekrar deneyiniz", 8000);
            //    else if (e.length > 0) {
            //        loadMap(e);
            //    } else{
            //        map.remove()
            //        ShowMessage("info", "Bilgi", "Koordinat bilgisi bulunamadı");
            //        map = new L.Map('map');
            //    }
            //}, 'POST');
        }
    });

    //$('body').on('shown.bs.modal', function(e) {
    //    setTimeout(function() { map.invalidateSize() }, 500);
    //})

    var markers = [];
    var markersPopup = [];
    var map = new L.Map('map2');
    async function fetchData(url) {
        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            const data = await response.json();
            $('#loadingEffect').css("display", "none");

            return data;
        } catch (err) { }
    }

    function loadMap2(tripId) {
        $('#loadingEffect').css("display", "flex");
        map.remove();
        var googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        });
        var googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        });
        var googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        });
        var googleTerrain = L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {
            maxZoom: 20,
            subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        });
        var base = L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {
            renderer: L.canvas(),
            subdomains: 'Tech',
            attribution: 'Harita',
        });
        var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: 'Harita'
        });

        map = L.map('map2', {
            layers: [googleStreets],
            fullscreenControl: true,
            fullscreenControlOptions: { // optional
                title: "Tam Ekran",
                titleCancel: "Tam Ekrandan Çık"
            }
        });

        var baseMaps = {
            "OpenStreetMap": base,
            "Mapbox Streets": osm,
            "Google Streets": googleStreets,
            "Google Hybrid": googleHybrid,
            "Google Sat": googleSat,
            "Google Terrain": googleTerrain
        };

        var layerControl = L.control.layers(baseMaps).addTo(map);
        map.attributionControl.setPrefix(''); // Don't show the 'Powered by Leaflet' text.

        let featureGroups = [];
        let groupBounds;
        let latlngs = [];


        fetchData("/Trip/GetByTripIdHistoryMap?tripId=" + tripId)
            .then((data) => {
                data.map((marker, i, arr) => {
                    var count = i + 1
                    var coords = [marker.Enlem.replace(',', '.'), marker.Boylam.replace(',', '.')]
                    var popupText = "Hız: <b>" + marker.Hiz + " Km/h</b> <br/>Tarih: <b>" + marker.Tarih.replace('T', ' ').replace('+03:00', '') + "</b>";

                    var className_ = "leaflet-marker-icon";

                    if (i == 0) {
                        className_ = "leaflet-marker-icon-start";
                        popupText = "(Başlangıç Noktası) Hız: <b>" + marker.Hiz + " Km/h</b> <br/>Tarih: <b>" + marker.Tarih.replace('T', ' ').replace('+03:00', '') + "</b>";
                    }
                    else if (arr.length - 1 === i) {
                        className_ = "leaflet-marker-icon-end";
                        popupText = "(Bitiş Noktası) Hız: <b>" + marker.Hiz + " Km/h</b> <br/>Tarih: <b>" + marker.Tarih.replace('T', ' ').replace('+03:00', '') + "</b>";
                    }
                    else
                        popupText = "Hız: <b>" + marker.Hiz + " Km/h</b> <br/>Tarih: <b>" + marker.Tarih.replace('T', ' ').replace('+03:00', '') + "</b>";

                    featureGroups.push(
                        L.marker(coords, {
                            icon: L.divIcon({
                                className: className_,
                                html: `${count}`,
                                iconSize: L.point(30, 30),
                                popupAnchor: [3, -5]
                            }),
                            "marker-options-id": count,
                        }).bindPopup(popupText)
                    );

                    latlngs.push(coords);
                });

                // add polyline to map
                L.polyline(latlngs, {
                    color: "red",
                    weight: 5,
                }).addTo(map);

                return data;
            }).then((data) => {

                featureGroups.map((marker) => {
                    marker.addTo(map);
                });

                var centNumber = parseInt(data.length / 2);
                var centerCoor = new L.LatLng(data[centNumber].Enlem.replace(',', '.'), data[centNumber].Boylam.replace(',', '.'));
                map.setView(centerCoor, 13);

                setTimeout(function () { map.invalidateSize() }, 800);

                if (data.length <= 0)
                    ShowMessage("info", "Bilgi", "Koordinat bilgisi bulunamadı");

            });


    }
</script>